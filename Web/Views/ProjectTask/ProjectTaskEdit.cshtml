@model Web.Viewmodels.Projects.ProjectTaskEditViewModel

@{
ViewData["Title"] = "Редактировать задачу проекта";
}

<div class="container mt-5">
    <h1 class="mb-4">Редактировать задачу проекта</h1>
    <form method="post" asp-action="Edit" asp-route-projectId="@Model.ProjectTaskEditDto.Project?.Id">
        @Html.HiddenFor(model => model.ProjectTaskEditDto.Id)
        @if (Model.ProjectTaskEditDto.Project != null)
        {
            @Html.HiddenFor(model => model.ProjectTaskEditDto.Project!.Id)
        }
        <div class="form-group">
            <label asp-for="ProjectTaskEditDto.DisplayName" class="control-label"></label>
            @Html.EditorFor(model => model.ProjectTaskEditDto.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectTaskEditDto.DisplayName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="ProjectTaskEditDto.Description" class="control-label"></label>
            @Html.EditorFor(model => model.ProjectTaskEditDto.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectTaskEditDto.Description, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="ProjectTaskEditDto.Readiness" class="control-label"></label>
            @Html.EditorFor(model => model.ProjectTaskEditDto.Readiness, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectTaskEditDto.Readiness, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="ProjectTaskEditDto.DateTimeStart" class="control-label"></label>
            @Html.EditorFor(model => model.ProjectTaskEditDto.DateTimeStart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectTaskEditDto.DateTimeStart, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="ProjectTaskEditDto.DateTimeEnd" class="control-label"></label>
            @Html.EditorFor(model => model.ProjectTaskEditDto.DateTimeEnd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectTaskEditDto.DateTimeEnd, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="ProjectTaskEditDto.StatusId" class="control-label"></label>
            @Html.EditorFor(model => model.ProjectTaskEditDto.StatusId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectTaskEditDto.StatusId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="ProjectTaskEditDto.AuthorId" class="control-label"></label>
            @Html.EditorFor(model => model.ProjectTaskEditDto.AuthorId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectTaskEditDto.AuthorId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="ProjectTaskEditDto.ParentTaskId" class="control-label"></label>
            @Html.EditorFor(model => model.ProjectTaskEditDto.ParentTaskId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectTaskEditDto.ParentTaskId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Сохранить</button>
            <a asp-action="List" asp-controller="ProjectTask" class="btn btn-secondary">Отмена</a>
        </div>
    </form>
</div>
